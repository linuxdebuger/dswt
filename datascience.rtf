{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPS-BoldMT;\f1\froman\fcharset0 Times-Roman;\f2\froman\fcharset0 Times-Italic;
\f3\fmodern\fcharset0 CourierNewPSMT;\f4\froman\fcharset0 Times-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green51\blue179;\red8\green8\blue8;\red6\green125\blue23;
\red102\green0\blue153;\red0\green0\blue128;\red140\green140\blue140;\red23\green80\blue235;\red0\green55\blue166;
\red0\green98\blue122;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c20000\c70196;\csgenericrgb\c3137\c3137\c3137;\csgenericrgb\c2353\c49020\c9020;
\csgenericrgb\c40000\c0\c60000;\csgenericrgb\c0\c0\c50196;\csgenericrgb\c54902\c54902\c54902;\csgenericrgb\c9020\c31373\c92157;\csgenericrgb\c0\c21569\c65098;
\csgenericrgb\c0\c38431\c47843;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh17440\viewkind0
\deftab720
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2  A) Write a Python program for Handling Missing Value. Replace missing value of salary, age column with mean of that column.(Use Data.csv file).   [5] \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 scipy.stats\uc0\u8232 \cf2 from \cf3 sklearn \cf2 import \cf3 preprocessing\uc0\u8232 \cf2 import \cf3 matplotlib.pyplot \cf2 as \cf3 plt\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\Data.csv"\cf3 )\uc0\u8232 Valuemean= df[\cf4 'age'\cf3 ].mean()\uc0\u8232 df[\cf4 'age'\cf3 ].fillna(Valuemean, \cf5 inplace\cf3 = \cf2 True\cf3 )\uc0\u8232 Valuemean=df[\cf4 'salary'\cf3 ].mean()\uc0\u8232 df[\cf4 'salary'\cf3 ].fillna(Valuemean, \cf5 inplace\cf3 = \cf2 True\cf3 )\uc0\u8232 \cf6 print\cf3 (df)\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2  B) Write a Python program to generate a line plot of name Vs salary   [5] \
(datalineplot.py)\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \u8232 \cf2 import \cf3 matplotlib.pyplot \cf2 as \cf3 plt\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\Data.csv"\cf3 )\uc0\u8232 plt.plot(df.age)\u8232 \u8232 
\f2\i \cf7 # Show the plot\uc0\u8232 
\f1\i0 \cf3 plt.show()\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 C) Download the heights and weights dataset and load the dataset froma given csv file into a dataframe. Print the first, last 10 rows and random 20 rows also display shape of the dataset.   [5]      (plot.py)\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f3\b0\fs20 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\weight-height.csv "\cf3 );\uc0\u8232 \cf6 print\cf3 (df.head(\cf8 10\cf3 ))\uc0\u8232 \cf6 print\cf3 (df.tail(\cf8 10\cf3 ))\uc0\u8232 \cf6 print\cf3 (df.sample(\cf8 20\cf3 ))\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 A)Write a Python program to create box plots to see how each feature i.e. Sepal Length, Sepal Width, Petal Length, Petal Width are distributed across the three species. (Use iris.csv dataset) [10]\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 numpy \cf2 as \cf3 np\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 matplotlib.pyplot \cf2 as \cf3 plt\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\Iris.csv"\cf3 )\uc0\u8232 a = df[[\cf4 "SepalLengthCm"\cf3 , \cf4 "SepalWidthCm"\cf3 , \cf4 "PetalLengthCm"\cf3 , \cf4 "PetalWidthCm"\cf3 ]]\uc0\u8232 plt.boxplot(a)\u8232 plt.show()\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 B) Write a Python program to view basic statistical details of the data (Use Heights and Weights Dataset)                (stat.py)\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 statistics \cf2 as \cf3 st\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\
\cf2 from \cf3 pandas.api.types \cf2 import \cf3 is_numeric_dtype\
\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\weight-height.csv "\cf3 )\uc0\u8232 \cf6 print\cf3 (\cf4 "Mean ="\cf3 , \cf5 end\cf3 =\cf4 ""\cf3 )\uc0\u8232 \cf6 print\cf3 (st.mean(df.Height))\uc0\u8232 \cf6 print\cf3 (\cf4 "Mode ="\cf3 , \cf5 end\cf3 =\cf4 ""\cf3 )\uc0\u8232 \cf6 print\cf3 (st.mode(df.Height))\uc0\u8232 \cf6 print\cf3 (\cf4 "Median ="\cf3 , \cf5 end\cf3 =\cf4 ""\cf3 )\uc0\u8232 \cf6 print\cf3 (st.median(df.Height))\uc0\u8232 \cf6 print\cf3 (\cf4 "Standerd Deviation = "\cf3 , \cf5 end\cf3 =\cf4 ""\cf3 )\uc0\u8232 \cf6 print\cf3 (st.pstdev(df.Height))\uc0\u8232 \cf6 print\cf3 (\cf6 range\cf3 )\
\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 B) Write a Python program to print the shape, number of rows-columns, data types, feature names and the description of the data(Use User_Data.csv) [5]     (disk.py)\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\User_Data.csv"\cf3 )\uc0\u8232 \cf6 print\cf3 (df.info())\uc0\u8232 \cf6 print\cf3 (df.dtypes)\uc0\u8232 \cf6 print\cf3 (\cf4 "number of rows"\cf3 ,df.shape[\cf8 0\cf3 ])\uc0\u8232 \cf6 print\cf3 (\cf4 "number of columns"\cf3 ,df.shape[\cf8 1\cf3 ])\
\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 B) Create two lists, one representing subject names and the other representing marks obtained in those subjects. Display the data in a pie chart.\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f2\i\b0\fs24 \cf7 # Import libraries\uc0\u8232 
\f1\i0 \cf2 from \cf3 matplotlib \cf2 import \cf3 pyplot \cf2 as \cf3 plt\uc0\u8232 \cf2 import \cf3 numpy \cf2 as \cf3 np\uc0\u8232 \u8232 
\f2\i \cf7 # Creating dataset\uc0\u8232 
\f1\i0 \cf3 name = [\cf4 'PHP'\cf3 , \cf4 'HTML'\cf3 , \cf4 'JAVA'\cf3 ,\uc0\u8232         \cf4 'OS'\cf3 , \cf4 'TCS'\cf3 , \cf4 'SE'\cf3 ]\uc0\u8232 \u8232 marks = [\cf8 23\cf3 , \cf8 17\cf3 , \cf8 35\cf3 , \cf8 29\cf3 , \cf8 12\cf3 , \cf8 41\cf3 ]\uc0\u8232 \u8232 
\f2\i \cf7 # Creating plot\uc0\u8232 
\f1\i0 \cf3 fig = plt.figure(\cf5 figsize\cf3 =(\cf8 10\cf3 , \cf8 7\cf3 ))\uc0\u8232 plt.pie(marks, \cf5 labels\cf3 =name)\uc0\u8232 \u8232 
\f2\i \cf7 # show plot\uc0\u8232 
\f1\i0 \cf3 plt.show()\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 A) Write a Python program to draw scatter plots to compare two features of the iris dataset [10]\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 matplotlib.pyplot \cf2 as \cf3 plt\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\Iris.csv"\cf3 )\uc0\u8232 plt.scatter(\cf5 x\cf3 =\cf4 'Species'\cf3 ,\uc0\u8232             \cf5 y\cf3 =\cf4 'SepalLengthCm'\cf3 ,\uc0\u8232             \cf5 data\cf3 =df)\uc0\u8232 \u8232 \u8232 
\f2\i \cf7 # To show the plot\uc0\u8232 
\f1\i0 \cf3 plt.show()\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 B) Write a Python program to create a data frame containing columns name, age , salary, department . Add 10 rows to the data frame. View the data frame. [5]\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 
\f2\i \cf7 #cteat and print data frame\uc0\u8232 
\f1\i0 \cf3 df=pd.DataFrame(\cf5 columns\cf3 =[\cf4 'name'\cf3 ,\cf4 'age'\cf3 ,\cf4 'percentage'\cf3 ])\uc0\u8232 df.loc[\cf8 0\cf3 ]=[\cf4 'sai'\cf3 ,\cf8 20\cf3 ,\cf8 33\cf3 ]\uc0\u8232 df.loc[\cf8 1\cf3 ]=[\cf4 'sai'\cf3 ,\cf8 20\cf3 ,\cf8 33\cf3 ]\uc0\u8232 df.loc[\cf8 2\cf3 ]=[\cf4 'sai'\cf3 ,\cf8 20\cf3 ,\cf8 33\cf3 ]\uc0\u8232 df.loc[\cf8 3\cf3 ]=[\cf4 'sai'\cf3 ,\cf8 20\cf3 ,\cf8 33\cf3 ]\uc0\u8232 df.loc[\cf8 4\cf3 ]=[\cf4 'sai'\cf3 ,\cf8 20\cf3 ,\cf8 33\cf3 ]\uc0\u8232 df.loc[\cf8 5\cf3 ]=[\cf4 'sai'\cf3 ,\cf8 20\cf3 ,\cf8 33\cf3 ]\uc0\u8232 df.loc[\cf8 6\cf3 ]=[\cf4 'sai'\cf3 ,\cf8 20\cf3 ,\cf8 33\cf3 ]\uc0\u8232 df.loc[\cf8 7\cf3 ]=[\cf4 'sai'\cf3 ,\cf8 20\cf3 ,\cf8 33\cf3 ]\uc0\u8232 df.loc[\cf8 8\cf3 ]=[\cf4 'sai'\cf3 ,\cf8 20\cf3 ,\cf8 33\cf3 ]\uc0\u8232 df.loc[\cf8 9\cf3 ]=[\cf4 'sai'\cf3 ,\cf8 20\cf3 ,\cf8 33.6\cf3 ]\uc0\u8232 \cf6 print\cf3 (df)\
\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 A) Generate a random array of 50 integers and display them using a line chart, scatter plot, histogram and box plot. Apply appropriate color, labels and styling options. [10]\
Histogram:\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 numpy \cf2 as \cf3 np\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 matplotlib.pyplot \cf2 as \cf3 plt\uc0\u8232 \u8232 
\f2\i \cf7 # random integers between 1 to 20\uc0\u8232 
\f1\i0 \cf3 a = np.random.randint(\cf8 1\cf3 , \cf8 20\cf3 , \cf5 size\cf3 =\cf8 50\cf3 )\
plt.hist(a)\uc0\u8232 plt.show()\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Scatterplot:\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 numpy \cf2 as \cf3 np\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 matplotlib.pyplot \cf2 as \cf3 plt\uc0\u8232 \u8232 
\f2\i \cf7 # random integers between 1 to 20\uc0\u8232 
\f1\i0 \cf3 x = np.random.randint(\cf8 1\cf3 , \cf8 20\cf3 , \cf5 size\cf3 =\cf8 50\cf3 )\uc0\u8232 y = np.random.randint(\cf8 1\cf3 , \cf8 20\cf3 , \cf5 size\cf3 =\cf8 50\cf3 )\uc0\u8232 plt.scatter(x, y)\u8232 plt.show()\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f4\b\fs28 \cf3 Linechar:\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 numpy \cf2 as \cf3 np\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 matplotlib.pyplot \cf2 as \cf3 plt\uc0\u8232 \u8232 
\f2\i \cf7 # random integers between 1 to 20\uc0\u8232 
\f1\i0 \cf3 a = np.random.randint(\cf8 1\cf3 , \cf8 20\cf3 , \cf5 size\cf3 =\cf8 50\cf3 )\uc0\u8232 \u8232 \u8232 plt.plot(a, \cf5 linestyle \cf3 = \cf4 'dotted'\cf3 )\uc0\u8232 plt.show()\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f4\b\fs28 \cf3 Boxplot:\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 numpy \cf2 as \cf3 np\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 matplotlib.pyplot \cf2 as \cf3 plt\uc0\u8232 \u8232 
\f2\i \cf7 # random integers between 1 to 20\uc0\u8232 
\f1\i0 \cf3 a = np.random.randint(\cf8 1\cf3 , \cf8 20\cf3 , \cf5 size\cf3 =\cf8 50\cf3 )\uc0\u8232 \u8232 \u8232 
\f2\i \cf7 # Creating plot\uc0\u8232 
\f1\i0 \cf3 plt.boxplot(a)\uc0\u8232 \u8232 
\f2\i \cf7 # show plot\uc0\u8232 
\f1\i0 \cf3 plt.show()\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 B) Add two outliers to the above data and display the box plot.\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f2\i\b0\fs24 \cf7 # Adding libraries\uc0\u8232 
\f1\i0 \cf2 import \cf3 numpy \cf2 as \cf3 np\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 matplotlib.pyplot \cf2 as \cf3 plt\uc0\u8232 \u8232 
\f2\i \cf7 # random integers between 1 to 20\uc0\u8232 
\f1\i0 \cf3 arr = np.random.randint(\cf8 1\cf3 , \cf8 20\cf3 , \cf5 size\cf3 =\cf8 50\cf3 )\uc0\u8232 \u8232 
\f2\i \cf7 # two outliers taken\uc0\u8232 
\f1\i0 \cf3 arr1 = np.append(arr, [\cf8 27\cf3 , \cf8 30\cf3 ])\uc0\u8232 \u8232 plt.boxplot(arr1)\u8232 fig = plt.figure(\cf5 figsize \cf3 =(\cf8 10\cf3 , \cf8 7\cf3 ))\uc0\u8232 plt.show()\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 A) Import dataset \'93iris.csv\'94. Write a Python program to create a Bar plot to get the frequency of the three species of the Iris data. [10]\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 seaborn \cf2 as \cf3 sns\uc0\u8232 \cf2 import \cf3 matplotlib.pyplot \cf2 as \cf3 plt\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\Iris.csv"\cf3 )\uc0\u8232 sns.barplot(\cf5 x\cf3 =\cf4 'Species'\cf3 ,\uc0\u8232             \cf5 y\cf3 =\cf4 'PetalLengthCm'\cf3 ,\uc0\u8232             \cf5 data\cf3 =df)\uc0\u8232 \u8232 
\f2\i \cf7 # Show the plot\uc0\u8232 
\f1\i0 \cf3 plt.show()\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 B)Write a Python program to create a histogram of the three species of the Iris data.\
[5]\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 from \cf3 matplotlib \cf2 import \cf3 pyplot \cf2 as \cf3 plt\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 numpy \cf2 as \cf3 np\uc0\u8232 
\f2\i \cf7 # Creating dataset\uc0\u8232 
\f1\i0 \cf3 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\Iris.csv"\cf3 )\uc0\u8232 plt.hist(\cf5 x\cf3 =\cf4 'Species'\cf3 ,\uc0\u8232             \cf5 y\cf3 =\cf4 'SepalLengthCm'\cf3 ,\uc0\u8232             \cf5 data\cf3 =df)\uc0\u8232 plt.show()\
\
\
\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 A) Import dataset \'93iris.csv\'94. Write a Python program to create a Bar plot to get the frequency of the three species of the Iris data. [10]\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 seaborn \cf2 as \cf3 sns\uc0\u8232 \cf2 import \cf3 matplotlib.pyplot \cf2 as \cf3 plt\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\Iris.csv"\cf3 )\uc0\u8232 sns.barplot(\cf5 x\cf3 =\cf4 'Species'\cf3 ,\uc0\u8232             \cf5 y\cf3 =\cf4 'PetalLengthCm'\cf3 ,\uc0\u8232             \cf5 data\cf3 =df)\uc0\u8232 \u8232 
\f2\i \cf7 # Show the plot\uc0\u8232 
\f1\i0 \cf3 plt.show()\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 B) Write a Python program to create a histogram of the three species of the Iris data. [5]\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 from \cf3 matplotlib \cf2 import \cf3 pyplot \cf2 as \cf3 plt\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 numpy \cf2 as \cf3 np\uc0\u8232 
\f2\i \cf7 # Creating dataset\uc0\u8232 
\f1\i0 \cf3 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\Iris.csv"\cf3 )\uc0\u8232 plt.hist(\cf5 x\cf3 =\cf4 'Species'\cf3 ,\uc0\u8232             \cf5 y\cf3 =\cf4 'SepalLengthCm'\cf3 ,\uc0\u8232             \cf5 data\cf3 =df)\uc0\u8232 plt.show()\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 B) Create two lists, one representing subject names and the other representing marks obtained in those subjects. Display the data in a pie chart. [5]9\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f2\i\b0\fs24 \cf7 # Import libraries\uc0\u8232 
\f1\i0 \cf2 from \cf3 matplotlib \cf2 import \cf3 pyplot \cf2 as \cf3 plt\uc0\u8232 \cf2 import \cf3 numpy \cf2 as \cf3 np\uc0\u8232 \u8232 
\f2\i \cf7 # Creating dataset\uc0\u8232 
\f1\i0 \cf3 name = [\cf4 'PHP'\cf3 , \cf4 'HTML'\cf3 , \cf4 'JAVA'\cf3 ,\uc0\u8232         \cf4 'OS'\cf3 , \cf4 'TCS'\cf3 , \cf4 'SE'\cf3 ]\uc0\u8232 \u8232 marks = [\cf8 23\cf3 , \cf8 17\cf3 , \cf8 35\cf3 , \cf8 29\cf3 , \cf8 12\cf3 , \cf8 41\cf3 ]\uc0\u8232 \u8232 
\f2\i \cf7 # Creating plot\uc0\u8232 
\f1\i0 \cf3 fig = plt.figure(\cf5 figsize\cf3 =(\cf8 10\cf3 , \cf8 7\cf3 ))\uc0\u8232 plt.pie(marks, \cf5 labels\cf3 =name)\uc0\u8232 \u8232 
\f2\i \cf7 # show plot\uc0\u8232 
\f1\i0 \cf3 plt.show()\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Write a Python program to perform the following tasks :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}Apply OneHot coding on Country column.\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 from \cf3 sklearn \cf2 import \cf3 preprocessing\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\countrydata.csv"\cf3 )\uc0\u8232 enc =preprocessing.OneHotEncoder()\u8232 onehotlable_data =enc.fit_transform(df[[\cf4 'Countey'\cf3 ]])\uc0\u8232 \cf6 print\cf3 (onehotlable_data)\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 *\
\pard\tx220\tx720\pardeftab720\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	\uc0\u8226 	}Apply Label encoding on purchased column\
\pard\pardeftab720\li720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 from \cf3 sklearn.preprocessing \cf2 import \cf3 LabelEncoder\uc0\u8232 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\countrydata.csv"\cf3 )\uc0\u8232 l= LabelEncoder()\u8232 df[\cf4 'purchased'\cf3 ] = l.fit_transform(df[\cf4 'purchased'\cf3 ])\uc0\u8232 \cf6 print\cf3 (df)\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 (Data.csv have two categorical column the country column, and the purchased column).\
[15]\
\
Q.2) Write a program in python to perform following task : [15]\
Standardizing Data (transform them into a standard Gaussian distribution with a mean of 0 and a standard deviation of 1) (Use winequality-red.csv)\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 sklearn\uc0\u8232 \cf2 from \cf3 sklearn \cf2 import \cf3 preprocessing \cf2 as \cf3 per\uc0\u8232 \cf2 from \cf3 sklearn.preprocessing \cf2 import \cf3 StandardScaler\
df= pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\winequality-red.csv"\cf3 , \cf5 sep\cf3 = \cf4 ","\cf3 )\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f2\i \cf7 #standerdization\uc0\u8232 
\f1\i0 \cf3 scaler=StandardScaler().fit(df)\uc0\u8232 sd= scaler.transform(df)\u8232 sd= pd.DataFrame(sd, \cf5 index\cf3 =df.index, \cf5 columns\cf3 =df.columns)\uc0\u8232 \cf6 print\cf3 (sd)\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2 A) Write a python program to Display column-wise mean, and median for SOCR- HeightWeight dataset. [10]\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 from \cf3 pandas.api.types \cf2 import \cf3 is_numeric_dtype\uc0\u8232 df = pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\weight-height.csv"\cf3 )\uc0\u8232 \cf2 for \cf3 col \cf2 in \cf3 df.columns:\uc0\u8232     \cf2 if \cf3 is_numeric_dtype(df[col]):\uc0\u8232         \cf6 print\cf3 (\cf4 '%s:'\cf3 %(col))\uc0\u8232 \u8232         \cf6 print\cf3 (\cf4 '\cf9 \\t\cf4  Mean=%2f'\cf3 %df[col].mean())\uc0\u8232         \cf6 print\cf3 (\cf4 '\cf9 \\t\cf4  Median=%.2f'\cf3 %df[col].median())\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0  Q.2 B) Write a python program to compute sum of Manhattan distance between all pairs of points. [5]\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 def \cf10 get_manhattan_distance\cf3 (p, q):\uc0\u8232     distance= \cf8 0\uc0\u8232     \cf2 for \cf3 p_i,q_i \cf2 in \cf6 zip\cf3 (p, q):\uc0\u8232         distance += \cf6 abs\cf3 (p_i-q_i)\uc0\u8232     \cf2 return \cf3 distance\uc0\u8232 a= (\cf8 1\cf3 ,\cf8 1\cf3 )\uc0\u8232 b=(\cf8 4\cf3 , \cf8 3\cf3 )\uc0\u8232 d= get_manhattan_distance(a, b)\u8232 \cf6 print\cf3 (d)\
\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 Q.2) Dataset Name: winequality-red.csv [15]\
Write a program in python to perform following tasks\
a. Rescaling: Normalised the dataset using MinMaxScaler class\
b. Standardizing Data (transform them into a standard Gaussian distribution with a mean of 0 and\
a standard deviation of 1)\
c. Normalizing Data ( rescale each observation to a length of 1 (a unit norm). For this, use the\
Normalizer class.)\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0\fs24 \cf2 import \cf3 pandas \cf2 as \cf3 pd\uc0\u8232 \cf2 import \cf3 sklearn\uc0\u8232 \cf2 from \cf3 sklearn \cf2 import \cf3 preprocessing \cf2 as \cf3 per\uc0\u8232 \cf2 from \cf3 sklearn.preprocessing \cf2 import \cf3 StandardScaler\uc0\u8232 \cf2 from \cf3 sklearn.preprocessing \cf2 import \cf3 Normalizer\uc0\u8232 df= pd.read_csv(\cf4 r"C:\\Users\\OM\\Desktop\\DS slip Slutions\\Dataset\\winequality-red.csv"\cf3 , \cf5 sep\cf3 = \cf4 ","\cf3 )\uc0\u8232 
\f2\i \cf7 #rescaling\uc0\u8232 
\f1\i0 \cf3 scaler= per.MinMaxScaler(\cf5 feature_range\cf3 =(\cf8 0\cf3 , \cf8 1\cf3 ))\uc0\u8232 rescaleData= scaler.fit_transform(df)\u8232 rescaleData= pd.DataFrame(rescaleData, \cf5 index\cf3 =df.index, \cf5 columns\cf3 =df.columns)\uc0\u8232 \cf6 print\cf3 (rescaleData)\uc0\u8232 
\f2\i \cf7 #standerdization\uc0\u8232 
\f1\i0 \cf3 scaler=StandardScaler().fit(df)\uc0\u8232 sd= scaler.transform(df)\u8232 sd= pd.DataFrame(sd, \cf5 index\cf3 =df.index, \cf5 columns\cf3 =df.columns)\uc0\u8232 \cf6 print\cf3 (sd)\uc0\u8232 
\f2\i \cf7 #Normalizing\uc0\u8232 
\f1\i0 \cf3 scaler=Normalizer().fit(df)\uc0\u8232 nd= scaler.transform(df)\u8232 nd= pd.DataFrame(nd, \cf5 index\cf3 =df.index, \cf5 columns\cf3 =df.columns)\uc0\u8232 \cf6 print\cf3 (nd)\
\
\
}